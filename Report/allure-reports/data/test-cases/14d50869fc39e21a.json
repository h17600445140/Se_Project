{
  "uid" : "14d50869fc39e21a",
  "name" : "test_newCostEstimateBoe",
  "fullName" : "Testcases.basIndexPageTest.purchaseEasPageTest.test_newCostEstimateBoe.TestNewCostEstimateBoe#test_newCostEstimateBoe",
  "historyId" : "7523d3a911584fd01f4ea1b6748883b4",
  "time" : {
    "start" : 1615017102442,
    "stop" : 1615017129364,
    "duration" : 26922
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert 1 == 0\n  +1\n  -0",
  "statusTrace" : "self = <Testcases.basIndexPageTest.purchaseEasPageTest.test_newCostEstimateBoe.TestNewCostEstimateBoe object at 0x000001FDCF4BD7F0>\n\n    @allure.story(\"成本暂估单（新）业务报账界面单据提交\")\n    @allure.step(\"成本暂估单（新）业务报账界面单据提交步骤\")\n    @allure.severity(\"blocker\")\n    @pytest.mark.dependency(name='submit')\n    def test_newCostEstimateBoe(self):\n        try:\n    \n            logger.info(\" ----- 单据提交流程开始 ----- \")\n    \n            with allure.step(\"点击选择采购付款页面\"):\n                self.newCostEstimateBoePage.selectTabType('采购付款')\n            with allure.step(\"进入成本暂估单（新）单据提交页面\"):\n                self.newCostEstimateBoePage.boeRntry('成本暂估(新)')\n    \n            global boeNum\n            boeNum = self.newCostEstimateBoePage.getBoeNum()\n    \n            with allure.step(\"选择业务类型\"):\n                self.newCostEstimateBoePage.input_operationType('UI通用')\n            with allure.step(\"输入备注\"):\n                self.newCostEstimateBoePage.input_boeAbstract('测试成本暂估单(新)')\n    \n            with allure.step(\"选择项目\"):\n                self.newCostEstimateBoePage.input_project('UI项目')\n            with allure.step(\"选择供应商\"):\n                self.newCostEstimateBoePage.selectVendor('UIGYS', vendorName='UI供应商')\n            # with allure.step(\"选择关联合同\"):\n            #     self.newCostEstimateBoePage.selectContract('hc00000020')\n            with allure.step(\"选择成本中心\"):\n                self.newCostEstimateBoePage.selectCc('UICBZX', ccName='UI成本中心')\n    \n            acceptanceNo = record.readDataFromRecord(type='acceptanceLedgerData')['acceptanceNo']\n    \n            with allure.step(\"关联验收单\"):\n                self.newCostEstimateBoePage.relateAcceptanceLedger(acceptanceNo)\n    \n            with allure.step(\"点击单据提交\"):\n                self.newCostEstimateBoePage.click_boeSubmitButton()\n            with allure.step(\"点击单据关闭按钮\"):\n>               self.newCostEstimateBoePage.click_close()\n\nTestcases\\basIndexPageTest\\purchaseEasPageTest\\test_newCostEstimateBoe.py:66: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <PageClass.basIndexPageClass.purchaseEasPageClass.newCostEstimateBoePage.NewCostEstimateBoePage object at 0x000001FDCF3C9278>\n\n    def click_close(self):\n        WebDriverWait(self.driver, 8).until(\n>           EC.visibility_of_element_located(self._close))\n\nPageClass\\common\\boeCommon.py:63: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"988cb0f03f784416057f56985da24d1e\")>, method = <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x000001FDCF27F828>, message = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nC:\\Users\\zxxy\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <Testcases.basIndexPageTest.purchaseEasPageTest.test_newCostEstimateBoe.TestNewCostEstimateBoe object at 0x000001FDCF4BD7F0>\n\n    @allure.story(\"成本暂估单（新）业务报账界面单据提交\")\n    @allure.step(\"成本暂估单（新）业务报账界面单据提交步骤\")\n    @allure.severity(\"blocker\")\n    @pytest.mark.dependency(name='submit')\n    def test_newCostEstimateBoe(self):\n        try:\n    \n            logger.info(\" ----- 单据提交流程开始 ----- \")\n    \n            with allure.step(\"点击选择采购付款页面\"):\n                self.newCostEstimateBoePage.selectTabType('采购付款')\n            with allure.step(\"进入成本暂估单（新）单据提交页面\"):\n                self.newCostEstimateBoePage.boeRntry('成本暂估(新)')\n    \n            global boeNum\n            boeNum = self.newCostEstimateBoePage.getBoeNum()\n    \n            with allure.step(\"选择业务类型\"):\n                self.newCostEstimateBoePage.input_operationType('UI通用')\n            with allure.step(\"输入备注\"):\n                self.newCostEstimateBoePage.input_boeAbstract('测试成本暂估单(新)')\n    \n            with allure.step(\"选择项目\"):\n                self.newCostEstimateBoePage.input_project('UI项目')\n            with allure.step(\"选择供应商\"):\n                self.newCostEstimateBoePage.selectVendor('UIGYS', vendorName='UI供应商')\n            # with allure.step(\"选择关联合同\"):\n            #     self.newCostEstimateBoePage.selectContract('hc00000020')\n            with allure.step(\"选择成本中心\"):\n                self.newCostEstimateBoePage.selectCc('UICBZX', ccName='UI成本中心')\n    \n            acceptanceNo = record.readDataFromRecord(type='acceptanceLedgerData')['acceptanceNo']\n    \n            with allure.step(\"关联验收单\"):\n                self.newCostEstimateBoePage.relateAcceptanceLedger(acceptanceNo)\n    \n            with allure.step(\"点击单据提交\"):\n                self.newCostEstimateBoePage.click_boeSubmitButton()\n            with allure.step(\"点击单据关闭按钮\"):\n                self.newCostEstimateBoePage.click_close()\n    \n            with allure.step(\"进行单据生成校验\"):\n                self.newCostEstimateBoePage.click_more()\n                self.newCostEstimateBoePage.input_boeNumQuery(boeNum)\n                self.newCostEstimateBoePage.click_queryButton()\n    \n            with allure.step(\"断言结果：{}\".format(self.newCostEstimateBoePage.checkBoeNumExistIsOrNot(boeNum))):\n                assert self.newCostEstimateBoePage.checkBoeNumExistIsOrNot(boeNum) == True\n    \n        except Exception as e:\n            logger.error(\"出现异常，异常信息为：{}\".format(type(e)))\n            code = 'wrong'\n            timeNow = getNowTime()\n            self.newCostEstimateBoePage.screenshot(code, timeNow)\n            allure.attach.file(getPicturePath(code, timeNow), name=timeNow + code + \"screenshot\",\n                               attachment_type=allure.attachment_type.PNG)\n            self.newCostEstimateBoePage.driver.quit()\n>           assert 1 == 0\nE           assert 1 == 0\nE             +1\nE             -0\n\nTestcases\\basIndexPageTest\\purchaseEasPageTest\\test_newCostEstimateBoe.py:84: AssertionError",
  "flaky" : false,
  "beforeStages" : [ {
    "name" : "_Class__pytest_setup_class",
    "time" : {
      "start" : 1615017085733,
      "stop" : 1615017102441,
      "duration" : 16708
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert 1 == 0\n  +1\n  -0",
    "statusTrace" : "self = <Testcases.basIndexPageTest.purchaseEasPageTest.test_newCostEstimateBoe.TestNewCostEstimateBoe object at 0x000001FDCF4BD7F0>\n\n    @allure.story(\"成本暂估单（新）业务报账界面单据提交\")\n    @allure.step(\"成本暂估单（新）业务报账界面单据提交步骤\")\n    @allure.severity(\"blocker\")\n    @pytest.mark.dependency(name='submit')\n    def test_newCostEstimateBoe(self):\n        try:\n    \n            logger.info(\" ----- 单据提交流程开始 ----- \")\n    \n            with allure.step(\"点击选择采购付款页面\"):\n                self.newCostEstimateBoePage.selectTabType('采购付款')\n            with allure.step(\"进入成本暂估单（新）单据提交页面\"):\n                self.newCostEstimateBoePage.boeRntry('成本暂估(新)')\n    \n            global boeNum\n            boeNum = self.newCostEstimateBoePage.getBoeNum()\n    \n            with allure.step(\"选择业务类型\"):\n                self.newCostEstimateBoePage.input_operationType('UI通用')\n            with allure.step(\"输入备注\"):\n                self.newCostEstimateBoePage.input_boeAbstract('测试成本暂估单(新)')\n    \n            with allure.step(\"选择项目\"):\n                self.newCostEstimateBoePage.input_project('UI项目')\n            with allure.step(\"选择供应商\"):\n                self.newCostEstimateBoePage.selectVendor('UIGYS', vendorName='UI供应商')\n            # with allure.step(\"选择关联合同\"):\n            #     self.newCostEstimateBoePage.selectContract('hc00000020')\n            with allure.step(\"选择成本中心\"):\n                self.newCostEstimateBoePage.selectCc('UICBZX', ccName='UI成本中心')\n    \n            acceptanceNo = record.readDataFromRecord(type='acceptanceLedgerData')['acceptanceNo']\n    \n            with allure.step(\"关联验收单\"):\n                self.newCostEstimateBoePage.relateAcceptanceLedger(acceptanceNo)\n    \n            with allure.step(\"点击单据提交\"):\n                self.newCostEstimateBoePage.click_boeSubmitButton()\n            with allure.step(\"点击单据关闭按钮\"):\n>               self.newCostEstimateBoePage.click_close()\n\nTestcases\\basIndexPageTest\\purchaseEasPageTest\\test_newCostEstimateBoe.py:66: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <PageClass.basIndexPageClass.purchaseEasPageClass.newCostEstimateBoePage.NewCostEstimateBoePage object at 0x000001FDCF3C9278>\n\n    def click_close(self):\n        WebDriverWait(self.driver, 8).until(\n>           EC.visibility_of_element_located(self._close))\n\nPageClass\\common\\boeCommon.py:63: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"988cb0f03f784416057f56985da24d1e\")>, method = <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x000001FDCF27F828>, message = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nC:\\Users\\zxxy\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <Testcases.basIndexPageTest.purchaseEasPageTest.test_newCostEstimateBoe.TestNewCostEstimateBoe object at 0x000001FDCF4BD7F0>\n\n    @allure.story(\"成本暂估单（新）业务报账界面单据提交\")\n    @allure.step(\"成本暂估单（新）业务报账界面单据提交步骤\")\n    @allure.severity(\"blocker\")\n    @pytest.mark.dependency(name='submit')\n    def test_newCostEstimateBoe(self):\n        try:\n    \n            logger.info(\" ----- 单据提交流程开始 ----- \")\n    \n            with allure.step(\"点击选择采购付款页面\"):\n                self.newCostEstimateBoePage.selectTabType('采购付款')\n            with allure.step(\"进入成本暂估单（新）单据提交页面\"):\n                self.newCostEstimateBoePage.boeRntry('成本暂估(新)')\n    \n            global boeNum\n            boeNum = self.newCostEstimateBoePage.getBoeNum()\n    \n            with allure.step(\"选择业务类型\"):\n                self.newCostEstimateBoePage.input_operationType('UI通用')\n            with allure.step(\"输入备注\"):\n                self.newCostEstimateBoePage.input_boeAbstract('测试成本暂估单(新)')\n    \n            with allure.step(\"选择项目\"):\n                self.newCostEstimateBoePage.input_project('UI项目')\n            with allure.step(\"选择供应商\"):\n                self.newCostEstimateBoePage.selectVendor('UIGYS', vendorName='UI供应商')\n            # with allure.step(\"选择关联合同\"):\n            #     self.newCostEstimateBoePage.selectContract('hc00000020')\n            with allure.step(\"选择成本中心\"):\n                self.newCostEstimateBoePage.selectCc('UICBZX', ccName='UI成本中心')\n    \n            acceptanceNo = record.readDataFromRecord(type='acceptanceLedgerData')['acceptanceNo']\n    \n            with allure.step(\"关联验收单\"):\n                self.newCostEstimateBoePage.relateAcceptanceLedger(acceptanceNo)\n    \n            with allure.step(\"点击单据提交\"):\n                self.newCostEstimateBoePage.click_boeSubmitButton()\n            with allure.step(\"点击单据关闭按钮\"):\n                self.newCostEstimateBoePage.click_close()\n    \n            with allure.step(\"进行单据生成校验\"):\n                self.newCostEstimateBoePage.click_more()\n                self.newCostEstimateBoePage.input_boeNumQuery(boeNum)\n                self.newCostEstimateBoePage.click_queryButton()\n    \n            with allure.step(\"断言结果：{}\".format(self.newCostEstimateBoePage.checkBoeNumExistIsOrNot(boeNum))):\n                assert self.newCostEstimateBoePage.checkBoeNumExistIsOrNot(boeNum) == True\n    \n        except Exception as e:\n            logger.error(\"出现异常，异常信息为：{}\".format(type(e)))\n            code = 'wrong'\n            timeNow = getNowTime()\n            self.newCostEstimateBoePage.screenshot(code, timeNow)\n            allure.attach.file(getPicturePath(code, timeNow), name=timeNow + code + \"screenshot\",\n                               attachment_type=allure.attachment_type.PNG)\n            self.newCostEstimateBoePage.driver.quit()\n>           assert 1 == 0\nE           assert 1 == 0\nE             +1\nE             -0\n\nTestcases\\basIndexPageTest\\purchaseEasPageTest\\test_newCostEstimateBoe.py:84: AssertionError",
    "steps" : [ {
      "name" : "成本暂估单（新）业务报账界面单据提交步骤",
      "time" : {
        "start" : 1615017102442,
        "stop" : 1615017129363,
        "duration" : 26921
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: assert 1 == 0\n  +1\n  -0\n",
      "statusTrace" : "  File \"C:\\Users\\zxxy\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\allure_commons\\_allure.py\", line 157, in impl\n    return func(*a, **kw)\n  File \"D:\\se\\Se_Project\\Testcases\\basIndexPageTest\\purchaseEasPageTest\\test_newCostEstimateBoe.py\", line 84, in test_newCostEstimateBoe\n    assert 1 == 0\n",
      "steps" : [ {
        "name" : "点击选择采购付款页面",
        "time" : {
          "start" : 1615017102443,
          "stop" : 1615017102695,
          "duration" : 252
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false,
        "stepsCount" : 0
      }, {
        "name" : "进入成本暂估单（新）单据提交页面",
        "time" : {
          "start" : 1615017102695,
          "stop" : 1615017102833,
          "duration" : 138
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false,
        "stepsCount" : 0
      }, {
        "name" : "选择业务类型",
        "time" : {
          "start" : 1615017109205,
          "stop" : 1615017110668,
          "duration" : 1463
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false,
        "stepsCount" : 0
      }, {
        "name" : "输入备注",
        "time" : {
          "start" : 1615017110668,
          "stop" : 1615017110881,
          "duration" : 213
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false,
        "stepsCount" : 0
      }, {
        "name" : "选择项目",
        "time" : {
          "start" : 1615017110881,
          "stop" : 1615017112070,
          "duration" : 1189
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false,
        "stepsCount" : 0
      }, {
        "name" : "选择供应商",
        "time" : {
          "start" : 1615017112070,
          "stop" : 1615017114815,
          "duration" : 2745
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false,
        "stepsCount" : 0
      }, {
        "name" : "选择成本中心",
        "time" : {
          "start" : 1615017114815,
          "stop" : 1615017116628,
          "duration" : 1813
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false,
        "stepsCount" : 0
      }, {
        "name" : "关联验收单",
        "time" : {
          "start" : 1615017116628,
          "stop" : 1615017117376,
          "duration" : 748
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false,
        "stepsCount" : 0
      }, {
        "name" : "点击单据提交",
        "time" : {
          "start" : 1615017117376,
          "stop" : 1615017117600,
          "duration" : 224
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false,
        "stepsCount" : 0
      }, {
        "name" : "点击单据关闭按钮",
        "time" : {
          "start" : 1615017117600,
          "stop" : 1615017126896,
          "duration" : 9296
        },
        "status" : "broken",
        "statusMessage" : "selenium.common.exceptions.TimeoutException: Message: \n\n",
        "statusTrace" : "  File \"D:\\se\\Se_Project\\Testcases\\basIndexPageTest\\purchaseEasPageTest\\test_newCostEstimateBoe.py\", line 66, in test_newCostEstimateBoe\n    self.newCostEstimateBoePage.click_close()\n  File \"D:\\se\\Se_Project\\PageClass\\common\\boeCommon.py\", line 63, in click_close\n    EC.visibility_of_element_located(self._close))\n  File \"C:\\Users\\zxxy\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 80, in until\n    raise TimeoutException(message, screen, stacktrace)\n",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : true,
        "hasContent" : true,
        "stepsCount" : 0
      } ],
      "attachments" : [ {
        "uid" : "9c0cf89c6ff2eea4",
        "name" : "2021-03-06 15-52-06wrongscreenshot",
        "source" : "9c0cf89c6ff2eea4.png",
        "type" : "image/png",
        "size" : 86931
      } ],
      "parameters" : [ ],
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : true,
      "hasContent" : true,
      "stepsCount" : 10
    } ],
    "attachments" : [ {
      "uid" : "fccad9517f688af3",
      "name" : "log",
      "source" : "fccad9517f688af3.txt",
      "type" : "text/plain",
      "size" : 1966
    } ],
    "parameters" : [ ],
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true,
    "hasContent" : true,
    "stepsCount" : 11
  },
  "afterStages" : [ {
    "name" : "_Class__pytest_setup_class::0",
    "time" : {
      "start" : 1615017129423,
      "stop" : 1615017137437,
      "duration" : 8014
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  } ],
  "labels" : [ {
    "name" : "story",
    "value" : "成本暂估单（新）业务报账界面单据提交"
  }, {
    "name" : "feature",
    "value" : "成本暂估单（新）流程"
  }, {
    "name" : "severity",
    "value" : "blocker"
  }, {
    "name" : "tag",
    "value" : "dependency(name='submit')"
  }, {
    "name" : "parentSuite",
    "value" : "Testcases.basIndexPageTest.purchaseEasPageTest"
  }, {
    "name" : "suite",
    "value" : "test_newCostEstimateBoe"
  }, {
    "name" : "subSuite",
    "value" : "TestNewCostEstimateBoe"
  }, {
    "name" : "host",
    "value" : "LAPTOP-3T6FO04H"
  }, {
    "name" : "thread",
    "value" : "55600-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "Testcases.basIndexPageTest.purchaseEasPageTest.test_newCostEstimateBoe"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "blocker",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ "dependency(name='submit')" ]
  },
  "source" : "14d50869fc39e21a.json",
  "parameterValues" : [ ]
}