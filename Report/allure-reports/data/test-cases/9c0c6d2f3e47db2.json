{
  "uid" : "9c0c6d2f3e47db2",
  "name" : "test_newObsoleteRedLetterInvoiceApplictationBoePage",
  "fullName" : "Testcases.basIndexPageTest.receivableEasPageTest.test_newObsoleteRedLetterInvoiceApplictationBoe.TestNewObsoleteRedLetterInvoiceApplictationBoe#test_newObsoleteRedLetterInvoiceApplictationBoePage",
  "historyId" : "05bb983ca3a9a7bae4148f91199c752b",
  "time" : {
    "start" : 1615016711052,
    "stop" : 1615016732082,
    "duration" : 21030
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert 1 == 0\n  +1\n  -0",
  "statusTrace" : "self = <Testcases.basIndexPageTest.receivableEasPageTest.test_newObsoleteRedLetterInvoiceApplictationBoe.TestNewObsoleteRedLetterInvoiceApplictationBoe object at 0x000001FDCF28AE80>\n\n    @allure.story(\"作废/红字发票申请单（新）业务报账界面单据提交\")\n    @allure.step(\"作废/红字发票申请单（新）业务报账界面单据提交步骤\")\n    @allure.severity(\"blocker\")\n    @pytest.mark.dependency(name='submit')\n    def test_newObsoleteRedLetterInvoiceApplictationBoePage(self):\n    \n        try:\n    \n            logger.info(\" ----- 单据提交流程开始 ----- \")\n    \n            with allure.step(\"点击选择收入收款页面\"):\n                self.newObsoleteRedLetterInvoiceApplictationBoePage.selectTabType('收入收款')\n            with allure.step(\"进入作废/红字发票申请单（新）单据提交页面\"):\n                self.newObsoleteRedLetterInvoiceApplictationBoePage.boeRntry('作废/红字发票申请单（新）')\n    \n            global boeNum\n            boeNum = self.newObsoleteRedLetterInvoiceApplictationBoePage.getBoeNum()\n    \n            with allure.step(\"选择业务类型\"):\n                self.newObsoleteRedLetterInvoiceApplictationBoePage.input_operationType('UI红字发票')\n            with allure.step(\"输入备注\"):\n                self.newObsoleteRedLetterInvoiceApplictationBoePage.input_boeAbstract('测试作废/红字发票申请单（新）')\n    \n            boeNumPath = os.path.join(os.path.dirname(os.path.realpath(__file__)), 'invoiceNum.json')\n            self.invoiceNum = readInvoiceNum(boeNumPath)\n    \n            with allure.step(\"选择关联发票\"):\n>               self.newObsoleteRedLetterInvoiceApplictationBoePage.relateTargetInvoice(self.invoiceNum)\n\nTestcases\\basIndexPageTest\\receivableEasPageTest\\test_newObsoleteRedLetterInvoiceApplictationBoe.py:58: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <PageClass.basIndexPageClass.receivableEasPageClass.newObsoleteRedLetterInvoiceApplictationBoePage.NewObsoleteRedLetterInvoiceApplictationBoePage object at 0x000001FDCF5A4470>, invoiceCode = '93409991'\n\n    def relateTargetInvoice(self, invoiceCode):\n        self.click_relateInvoiceButton()\n        WebDriverWait(self.driver, 5).until(\n            EC.visibility_of_element_located( self._itemairNumber ))\n        self.send_text(invoiceCode, *self._itemairNumber)\n        self.click( *(By.XPATH, '/html/body//form/div[4]/div/button[1]'))\n        sleep(1)\n>       self.find_element(*(By.CLASS_NAME, 'el-col')).find_element(*(By.CLASS_NAME, 'zte-invoice')).click()\n\nPageClass\\common\\boeCommon.py:453: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <PageClass.basIndexPageClass.receivableEasPageClass.newObsoleteRedLetterInvoiceApplictationBoePage.NewObsoleteRedLetterInvoiceApplictationBoePage object at 0x000001FDCF5A4470>, loc = ('class name', 'el-col')\n\n    def find_element(self, *loc):\n>       return self.driver.find_element(*loc)\n\nPageClass\\basePage.py:24: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"527b46cabee832916abddc65467f45e7\")>, by = 'css selector', value = '.el-col'\n\n    def find_element(self, by=By.ID, value=None):\n        \"\"\"\n        Find an element given a By strategy and locator. Prefer the find_element_by_* methods when\n        possible.\n    \n        :Usage:\n            element = driver.find_element(By.ID, 'foo')\n    \n        :rtype: WebElement\n        \"\"\"\n        if self.w3c:\n            if by == By.ID:\n                by = By.CSS_SELECTOR\n                value = '[id=\"%s\"]' % value\n            elif by == By.TAG_NAME:\n                by = By.CSS_SELECTOR\n            elif by == By.CLASS_NAME:\n                by = By.CSS_SELECTOR\n                value = \".%s\" % value\n            elif by == By.NAME:\n                by = By.CSS_SELECTOR\n                value = '[name=\"%s\"]' % value\n        return self.execute(Command.FIND_ELEMENT, {\n            'using': by,\n>           'value': value})['value']\n\nC:\\Users\\zxxy\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:978: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"527b46cabee832916abddc65467f45e7\")>, driver_command = 'findElement', params = {'using': 'css selector', 'value': '.el-col'}\n\n    def execute(self, driver_command, params=None):\n        \"\"\"\n        Sends a command to be executed by a command.CommandExecutor.\n    \n        :Args:\n         - driver_command: The name of the command to execute as a string.\n         - params: A dictionary of named parameters to send with the command.\n    \n        :Returns:\n          The command's JSON response loaded into a dictionary object.\n        \"\"\"\n        if self.session_id is not None:\n            if not params:\n                params = {'sessionId': self.session_id}\n            elif 'sessionId' not in params:\n                params['sessionId'] = self.session_id\n    \n        params = self._wrap_value(params)\n        response = self.command_executor.execute(driver_command, params)\n        if response:\n>           self.error_handler.check_response(response)\n\nC:\\Users\\zxxy\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:321: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001FDCF734208>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\n\\\\tRtlGetAppContainerNamedObjectPath [0x76FE8944+228]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x76FE8914+180]\\\\n\"}}'}\n\n    def check_response(self, response):\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if status is None or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, basestring):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if status is None:\n                        status = value[\"status\"]\n                        message = value[\"value\"]\n                        if not isinstance(message, basestring):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class = ErrorInResponseException\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if value == '' or value is None:\n            value = response['value']\n        if isinstance(value, basestring):\n            if exception_class == ErrorInResponseException:\n                raise exception_class(response, value)\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        if 'stackTrace' in value and value['stackTrace']:\n            stacktrace = []\n            try:\n                for frame in value['stackTrace']:\n                    line = self._value_or_default(frame, 'lineNumber', '')\n                    file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                    if line:\n                        file = \"%s:%s\" % (file, line)\n                    meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                    if 'className' in frame:\n                        meth = \"%s.%s\" % (frame['className'], meth)\n                    msg = \"    at %s (%s)\"\n                    msg = msg % (meth, file)\n                    stacktrace.append(msg)\n            except TypeError:\n                pass\n        if exception_class == ErrorInResponseException:\n            raise exception_class(response, message)\n        elif exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\".el-col\"}\nE         (Session info: chrome=88.0.4324.190)\n\nC:\\Users\\zxxy\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:242: NoSuchElementException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <Testcases.basIndexPageTest.receivableEasPageTest.test_newObsoleteRedLetterInvoiceApplictationBoe.TestNewObsoleteRedLetterInvoiceApplictationBoe object at 0x000001FDCF28AE80>\n\n    @allure.story(\"作废/红字发票申请单（新）业务报账界面单据提交\")\n    @allure.step(\"作废/红字发票申请单（新）业务报账界面单据提交步骤\")\n    @allure.severity(\"blocker\")\n    @pytest.mark.dependency(name='submit')\n    def test_newObsoleteRedLetterInvoiceApplictationBoePage(self):\n    \n        try:\n    \n            logger.info(\" ----- 单据提交流程开始 ----- \")\n    \n            with allure.step(\"点击选择收入收款页面\"):\n                self.newObsoleteRedLetterInvoiceApplictationBoePage.selectTabType('收入收款')\n            with allure.step(\"进入作废/红字发票申请单（新）单据提交页面\"):\n                self.newObsoleteRedLetterInvoiceApplictationBoePage.boeRntry('作废/红字发票申请单（新）')\n    \n            global boeNum\n            boeNum = self.newObsoleteRedLetterInvoiceApplictationBoePage.getBoeNum()\n    \n            with allure.step(\"选择业务类型\"):\n                self.newObsoleteRedLetterInvoiceApplictationBoePage.input_operationType('UI红字发票')\n            with allure.step(\"输入备注\"):\n                self.newObsoleteRedLetterInvoiceApplictationBoePage.input_boeAbstract('测试作废/红字发票申请单（新）')\n    \n            boeNumPath = os.path.join(os.path.dirname(os.path.realpath(__file__)), 'invoiceNum.json')\n            self.invoiceNum = readInvoiceNum(boeNumPath)\n    \n            with allure.step(\"选择关联发票\"):\n                self.newObsoleteRedLetterInvoiceApplictationBoePage.relateTargetInvoice(self.invoiceNum)\n    \n            with allure.step(\"点击单据提交\"):\n                self.newObsoleteRedLetterInvoiceApplictationBoePage.click_boeSubmitButton()\n            with allure.step(\"点击单据关闭按钮\"):\n                self.newObsoleteRedLetterInvoiceApplictationBoePage.click_close()\n    \n            with allure.step(\"进行单据生成校验\"):\n                self.newObsoleteRedLetterInvoiceApplictationBoePage.click_more()\n                self.newObsoleteRedLetterInvoiceApplictationBoePage.input_boeNumQuery(boeNum)\n                self.newObsoleteRedLetterInvoiceApplictationBoePage.click_queryButton()\n    \n            with allure.step(\"断言结果：{}\".format(self.newObsoleteRedLetterInvoiceApplictationBoePage.checkBoeNumExistIsOrNot(boeNum))):\n                assert self.newObsoleteRedLetterInvoiceApplictationBoePage.checkBoeNumExistIsOrNot(boeNum) == True\n    \n            logger.info(\" ----- 单据提交流程结束 ----- \")\n    \n        except Exception as e:\n            logger.error(\"出现异常，异常信息为：{}\".format(type(e)))\n            code = 'wrong'\n            timeNow = getNowTime()\n            self.newObsoleteRedLetterInvoiceApplictationBoePage.screenshot(code, timeNow)\n            allure.attach.file(getPicturePath(code, timeNow), name=timeNow + code + \"screenshot\",\n                               attachment_type=allure.attachment_type.PNG)\n            self.newObsoleteRedLetterInvoiceApplictationBoePage.driver.quit()\n>           assert 1 == 0\nE           assert 1 == 0\nE             +1\nE             -0\n\nTestcases\\basIndexPageTest\\receivableEasPageTest\\test_newObsoleteRedLetterInvoiceApplictationBoe.py:83: AssertionError",
  "flaky" : false,
  "beforeStages" : [ {
    "name" : "_Class__pytest_setup_class",
    "time" : {
      "start" : 1615016694613,
      "stop" : 1615016711052,
      "duration" : 16439
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert 1 == 0\n  +1\n  -0",
    "statusTrace" : "self = <Testcases.basIndexPageTest.receivableEasPageTest.test_newObsoleteRedLetterInvoiceApplictationBoe.TestNewObsoleteRedLetterInvoiceApplictationBoe object at 0x000001FDCF28AE80>\n\n    @allure.story(\"作废/红字发票申请单（新）业务报账界面单据提交\")\n    @allure.step(\"作废/红字发票申请单（新）业务报账界面单据提交步骤\")\n    @allure.severity(\"blocker\")\n    @pytest.mark.dependency(name='submit')\n    def test_newObsoleteRedLetterInvoiceApplictationBoePage(self):\n    \n        try:\n    \n            logger.info(\" ----- 单据提交流程开始 ----- \")\n    \n            with allure.step(\"点击选择收入收款页面\"):\n                self.newObsoleteRedLetterInvoiceApplictationBoePage.selectTabType('收入收款')\n            with allure.step(\"进入作废/红字发票申请单（新）单据提交页面\"):\n                self.newObsoleteRedLetterInvoiceApplictationBoePage.boeRntry('作废/红字发票申请单（新）')\n    \n            global boeNum\n            boeNum = self.newObsoleteRedLetterInvoiceApplictationBoePage.getBoeNum()\n    \n            with allure.step(\"选择业务类型\"):\n                self.newObsoleteRedLetterInvoiceApplictationBoePage.input_operationType('UI红字发票')\n            with allure.step(\"输入备注\"):\n                self.newObsoleteRedLetterInvoiceApplictationBoePage.input_boeAbstract('测试作废/红字发票申请单（新）')\n    \n            boeNumPath = os.path.join(os.path.dirname(os.path.realpath(__file__)), 'invoiceNum.json')\n            self.invoiceNum = readInvoiceNum(boeNumPath)\n    \n            with allure.step(\"选择关联发票\"):\n>               self.newObsoleteRedLetterInvoiceApplictationBoePage.relateTargetInvoice(self.invoiceNum)\n\nTestcases\\basIndexPageTest\\receivableEasPageTest\\test_newObsoleteRedLetterInvoiceApplictationBoe.py:58: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <PageClass.basIndexPageClass.receivableEasPageClass.newObsoleteRedLetterInvoiceApplictationBoePage.NewObsoleteRedLetterInvoiceApplictationBoePage object at 0x000001FDCF5A4470>, invoiceCode = '93409991'\n\n    def relateTargetInvoice(self, invoiceCode):\n        self.click_relateInvoiceButton()\n        WebDriverWait(self.driver, 5).until(\n            EC.visibility_of_element_located( self._itemairNumber ))\n        self.send_text(invoiceCode, *self._itemairNumber)\n        self.click( *(By.XPATH, '/html/body//form/div[4]/div/button[1]'))\n        sleep(1)\n>       self.find_element(*(By.CLASS_NAME, 'el-col')).find_element(*(By.CLASS_NAME, 'zte-invoice')).click()\n\nPageClass\\common\\boeCommon.py:453: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <PageClass.basIndexPageClass.receivableEasPageClass.newObsoleteRedLetterInvoiceApplictationBoePage.NewObsoleteRedLetterInvoiceApplictationBoePage object at 0x000001FDCF5A4470>, loc = ('class name', 'el-col')\n\n    def find_element(self, *loc):\n>       return self.driver.find_element(*loc)\n\nPageClass\\basePage.py:24: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"527b46cabee832916abddc65467f45e7\")>, by = 'css selector', value = '.el-col'\n\n    def find_element(self, by=By.ID, value=None):\n        \"\"\"\n        Find an element given a By strategy and locator. Prefer the find_element_by_* methods when\n        possible.\n    \n        :Usage:\n            element = driver.find_element(By.ID, 'foo')\n    \n        :rtype: WebElement\n        \"\"\"\n        if self.w3c:\n            if by == By.ID:\n                by = By.CSS_SELECTOR\n                value = '[id=\"%s\"]' % value\n            elif by == By.TAG_NAME:\n                by = By.CSS_SELECTOR\n            elif by == By.CLASS_NAME:\n                by = By.CSS_SELECTOR\n                value = \".%s\" % value\n            elif by == By.NAME:\n                by = By.CSS_SELECTOR\n                value = '[name=\"%s\"]' % value\n        return self.execute(Command.FIND_ELEMENT, {\n            'using': by,\n>           'value': value})['value']\n\nC:\\Users\\zxxy\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:978: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"527b46cabee832916abddc65467f45e7\")>, driver_command = 'findElement', params = {'using': 'css selector', 'value': '.el-col'}\n\n    def execute(self, driver_command, params=None):\n        \"\"\"\n        Sends a command to be executed by a command.CommandExecutor.\n    \n        :Args:\n         - driver_command: The name of the command to execute as a string.\n         - params: A dictionary of named parameters to send with the command.\n    \n        :Returns:\n          The command's JSON response loaded into a dictionary object.\n        \"\"\"\n        if self.session_id is not None:\n            if not params:\n                params = {'sessionId': self.session_id}\n            elif 'sessionId' not in params:\n                params['sessionId'] = self.session_id\n    \n        params = self._wrap_value(params)\n        response = self.command_executor.execute(driver_command, params)\n        if response:\n>           self.error_handler.check_response(response)\n\nC:\\Users\\zxxy\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:321: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001FDCF734208>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\n\\\\tRtlGetAppContainerNamedObjectPath [0x76FE8944+228]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x76FE8914+180]\\\\n\"}}'}\n\n    def check_response(self, response):\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if status is None or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, basestring):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if status is None:\n                        status = value[\"status\"]\n                        message = value[\"value\"]\n                        if not isinstance(message, basestring):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class = ErrorInResponseException\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if value == '' or value is None:\n            value = response['value']\n        if isinstance(value, basestring):\n            if exception_class == ErrorInResponseException:\n                raise exception_class(response, value)\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        if 'stackTrace' in value and value['stackTrace']:\n            stacktrace = []\n            try:\n                for frame in value['stackTrace']:\n                    line = self._value_or_default(frame, 'lineNumber', '')\n                    file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                    if line:\n                        file = \"%s:%s\" % (file, line)\n                    meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                    if 'className' in frame:\n                        meth = \"%s.%s\" % (frame['className'], meth)\n                    msg = \"    at %s (%s)\"\n                    msg = msg % (meth, file)\n                    stacktrace.append(msg)\n            except TypeError:\n                pass\n        if exception_class == ErrorInResponseException:\n            raise exception_class(response, message)\n        elif exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\".el-col\"}\nE         (Session info: chrome=88.0.4324.190)\n\nC:\\Users\\zxxy\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:242: NoSuchElementException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <Testcases.basIndexPageTest.receivableEasPageTest.test_newObsoleteRedLetterInvoiceApplictationBoe.TestNewObsoleteRedLetterInvoiceApplictationBoe object at 0x000001FDCF28AE80>\n\n    @allure.story(\"作废/红字发票申请单（新）业务报账界面单据提交\")\n    @allure.step(\"作废/红字发票申请单（新）业务报账界面单据提交步骤\")\n    @allure.severity(\"blocker\")\n    @pytest.mark.dependency(name='submit')\n    def test_newObsoleteRedLetterInvoiceApplictationBoePage(self):\n    \n        try:\n    \n            logger.info(\" ----- 单据提交流程开始 ----- \")\n    \n            with allure.step(\"点击选择收入收款页面\"):\n                self.newObsoleteRedLetterInvoiceApplictationBoePage.selectTabType('收入收款')\n            with allure.step(\"进入作废/红字发票申请单（新）单据提交页面\"):\n                self.newObsoleteRedLetterInvoiceApplictationBoePage.boeRntry('作废/红字发票申请单（新）')\n    \n            global boeNum\n            boeNum = self.newObsoleteRedLetterInvoiceApplictationBoePage.getBoeNum()\n    \n            with allure.step(\"选择业务类型\"):\n                self.newObsoleteRedLetterInvoiceApplictationBoePage.input_operationType('UI红字发票')\n            with allure.step(\"输入备注\"):\n                self.newObsoleteRedLetterInvoiceApplictationBoePage.input_boeAbstract('测试作废/红字发票申请单（新）')\n    \n            boeNumPath = os.path.join(os.path.dirname(os.path.realpath(__file__)), 'invoiceNum.json')\n            self.invoiceNum = readInvoiceNum(boeNumPath)\n    \n            with allure.step(\"选择关联发票\"):\n                self.newObsoleteRedLetterInvoiceApplictationBoePage.relateTargetInvoice(self.invoiceNum)\n    \n            with allure.step(\"点击单据提交\"):\n                self.newObsoleteRedLetterInvoiceApplictationBoePage.click_boeSubmitButton()\n            with allure.step(\"点击单据关闭按钮\"):\n                self.newObsoleteRedLetterInvoiceApplictationBoePage.click_close()\n    \n            with allure.step(\"进行单据生成校验\"):\n                self.newObsoleteRedLetterInvoiceApplictationBoePage.click_more()\n                self.newObsoleteRedLetterInvoiceApplictationBoePage.input_boeNumQuery(boeNum)\n                self.newObsoleteRedLetterInvoiceApplictationBoePage.click_queryButton()\n    \n            with allure.step(\"断言结果：{}\".format(self.newObsoleteRedLetterInvoiceApplictationBoePage.checkBoeNumExistIsOrNot(boeNum))):\n                assert self.newObsoleteRedLetterInvoiceApplictationBoePage.checkBoeNumExistIsOrNot(boeNum) == True\n    \n            logger.info(\" ----- 单据提交流程结束 ----- \")\n    \n        except Exception as e:\n            logger.error(\"出现异常，异常信息为：{}\".format(type(e)))\n            code = 'wrong'\n            timeNow = getNowTime()\n            self.newObsoleteRedLetterInvoiceApplictationBoePage.screenshot(code, timeNow)\n            allure.attach.file(getPicturePath(code, timeNow), name=timeNow + code + \"screenshot\",\n                               attachment_type=allure.attachment_type.PNG)\n            self.newObsoleteRedLetterInvoiceApplictationBoePage.driver.quit()\n>           assert 1 == 0\nE           assert 1 == 0\nE             +1\nE             -0\n\nTestcases\\basIndexPageTest\\receivableEasPageTest\\test_newObsoleteRedLetterInvoiceApplictationBoe.py:83: AssertionError",
    "steps" : [ {
      "name" : "作废/红字发票申请单（新）业务报账界面单据提交步骤",
      "time" : {
        "start" : 1615016711052,
        "stop" : 1615016732082,
        "duration" : 21030
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: assert 1 == 0\n  +1\n  -0\n",
      "statusTrace" : "  File \"C:\\Users\\zxxy\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\allure_commons\\_allure.py\", line 157, in impl\n    return func(*a, **kw)\n  File \"D:\\se\\Se_Project\\Testcases\\basIndexPageTest\\receivableEasPageTest\\test_newObsoleteRedLetterInvoiceApplictationBoe.py\", line 83, in test_newObsoleteRedLetterInvoiceApplictationBoePage\n    assert 1 == 0\n",
      "steps" : [ {
        "name" : "点击选择收入收款页面",
        "time" : {
          "start" : 1615016711053,
          "stop" : 1615016711158,
          "duration" : 105
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false,
        "stepsCount" : 0
      }, {
        "name" : "进入作废/红字发票申请单（新）单据提交页面",
        "time" : {
          "start" : 1615016711158,
          "stop" : 1615016711304,
          "duration" : 146
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false,
        "stepsCount" : 0
      }, {
        "name" : "选择业务类型",
        "time" : {
          "start" : 1615016725584,
          "stop" : 1615016726819,
          "duration" : 1235
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false,
        "stepsCount" : 0
      }, {
        "name" : "输入备注",
        "time" : {
          "start" : 1615016726819,
          "stop" : 1615016727072,
          "duration" : 253
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false,
        "stepsCount" : 0
      }, {
        "name" : "选择关联发票",
        "time" : {
          "start" : 1615016727073,
          "stop" : 1615016729579,
          "duration" : 2506
        },
        "status" : "broken",
        "statusMessage" : "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\".el-col\"}\n  (Session info: chrome=88.0.4324.190)\n\n",
        "statusTrace" : "  File \"D:\\se\\Se_Project\\Testcases\\basIndexPageTest\\receivableEasPageTest\\test_newObsoleteRedLetterInvoiceApplictationBoe.py\", line 58, in test_newObsoleteRedLetterInvoiceApplictationBoePage\n    self.newObsoleteRedLetterInvoiceApplictationBoePage.relateTargetInvoice(self.invoiceNum)\n  File \"D:\\se\\Se_Project\\PageClass\\common\\boeCommon.py\", line 453, in relateTargetInvoice\n    self.find_element(*(By.CLASS_NAME, 'el-col')).find_element(*(By.CLASS_NAME, 'zte-invoice')).click()\n  File \"D:\\se\\Se_Project\\PageClass\\basePage.py\", line 24, in find_element\n    return self.driver.find_element(*loc)\n  File \"C:\\Users\\zxxy\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 978, in find_element\n    'value': value})['value']\n  File \"C:\\Users\\zxxy\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 321, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\Users\\zxxy\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 242, in check_response\n    raise exception_class(message, screen, stacktrace)\n",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : true,
        "hasContent" : true,
        "stepsCount" : 0
      } ],
      "attachments" : [ {
        "uid" : "b03e32a6ab6e4ee6",
        "name" : "2021-03-06 15-45-29wrongscreenshot",
        "source" : "b03e32a6ab6e4ee6.png",
        "type" : "image/png",
        "size" : 90512
      } ],
      "parameters" : [ ],
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : true,
      "hasContent" : true,
      "stepsCount" : 5
    } ],
    "attachments" : [ {
      "uid" : "80d4d7d4a21fcf30",
      "name" : "log",
      "source" : "80d4d7d4a21fcf30.txt",
      "type" : "text/plain",
      "size" : 1373
    } ],
    "parameters" : [ ],
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true,
    "hasContent" : true,
    "stepsCount" : 6
  },
  "afterStages" : [ {
    "name" : "_Class__pytest_setup_class::0",
    "time" : {
      "start" : 1615016732160,
      "stop" : 1615016740175,
      "duration" : 8015
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "作废/红字发票申请单（新）"
  }, {
    "name" : "severity",
    "value" : "blocker"
  }, {
    "name" : "story",
    "value" : "作废/红字发票申请单（新）业务报账界面单据提交"
  }, {
    "name" : "tag",
    "value" : "dependency(name='submit')"
  }, {
    "name" : "parentSuite",
    "value" : "Testcases.basIndexPageTest.receivableEasPageTest"
  }, {
    "name" : "suite",
    "value" : "test_newObsoleteRedLetterInvoiceApplictationBoe"
  }, {
    "name" : "subSuite",
    "value" : "TestNewObsoleteRedLetterInvoiceApplictationBoe"
  }, {
    "name" : "host",
    "value" : "LAPTOP-3T6FO04H"
  }, {
    "name" : "thread",
    "value" : "55600-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "Testcases.basIndexPageTest.receivableEasPageTest.test_newObsoleteRedLetterInvoiceApplictationBoe"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "blocker",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ "dependency(name='submit')" ]
  },
  "source" : "9c0c6d2f3e47db2.json",
  "parameterValues" : [ ]
}